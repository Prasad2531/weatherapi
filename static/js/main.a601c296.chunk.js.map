{"version":3,"sources":["components/CityComponent.js","components/WeatherInfoComponent.js","components/Footer.js","App.js","index.js"],"names":["WeatherLogo","styled","img","SearchBox","form","CityComponent","props","updateCity","fetchWeather","onSubmit","type","placeholder","onInput","e","target","value","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherCondition","div","Condition","span","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","src","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Footer","className","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","res","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a601c296.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const WeatherLogo=styled.img`\r\nwidth:200px;\r\nheight:200px;\r\nmargin: 40px auto;\r\n`;\r\n\r\nconst SearchBox=styled.form`\r\ndisplay:flex;\r\nflex-direction:row;\r\ncolor:black;\r\nmargin: 20px auto;\r\n& input{\r\n    padding:10px;\r\n    font-size:14px;\r\n    border:transparent solid 2px;\r\n    border-radius:20px;\r\n    font-weight:bold;\r\n    outline:none;\r\n}\r\n& button{\r\n    background:black;\r\n    color:white;\r\n    padding:10px;\r\n    margin-left:5px;\r\n    font-size:14px;\r\n    border:transparent solid 2px;\r\n    font-weight:bold;\r\n    border-radius:20px;\r\n    cursor:pointer;\r\n    outline:none;\r\n}\r\n`;\r\n\r\nconst CityComponent = (props) => {\r\n    const {updateCity,fetchWeather}=props;\r\n    return (\r\n        <>\r\n            {/* <WeatherLogo src=\"./icons/perfect-day.svg\"/> */}\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input type=\"text\" placeholder=\"City\"\r\n                onInput={(e)=>updateCity(e.target.value)}/>\r\n                <button type=\"submit\">Search</button>\r\n            </SearchBox>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityComponent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const WeatherInfoIcons={\r\n    sunset:\"/icons/temp.svg\",\r\n    sunrise:\"/icons/temp.svg\",\r\n    humidity:\"/icons/humidity.svg\",\r\n    wind:\"/icons/wind.svg\",\r\n    pressure:\"/icons/pressure.svg\",\r\n};\r\n\r\nexport const WeatherIcons = {\r\n    \"01d\": \"/icons/sunny.svg\",\r\n    \"01n\": \"/icons/night.svg\",\r\n    \"02d\": \"/icons/day.svg\",\r\n    \"02n\": \"/icons/cloudy-night.svg\",\r\n    \"03d\": \"/icons/cloudy.svg\",\r\n    \"03n\": \"/icons/cloudy.svg\",\r\n    \"04d\": \"/icons/perfect-day.svg\",\r\n    \"04n\": \"/icons/cloudy-night.svg\",\r\n    \"09d\": \"/icons/rain.svg\",\r\n    \"09n\": \"/icons/rain-night.svg\",\r\n    \"10d\": \"/icons/rain.svg\",\r\n    \"10n\": \"/icons/rain-night.svg\",\r\n    \"11d\": \"/icons/storm.svg\",\r\n    \"11n\": \"/icons/storm.svg\",\r\n  };\r\n\r\nconst WeatherCondition=styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\nwidth:100%;\r\njustify-content:space-between;\r\nmargin:30px auto;\r\n`;\r\n\r\nconst Condition=styled.span`\r\nmargin:20px auto;\r\nfont-size:14px;\r\n& span{\r\n    font-size:28px;\r\n}\r\n`;\r\n\r\nconst Location=styled.span`\r\nfont-size:28px;\r\nfont-weight:bold;\r\n`;\r\nconst WeatherInfoLabel=styled.span`\r\nfont-size:14px;\r\nfont-weight:bold;\r\nmargin: 20px 25px 10px;\r\ntext-align:start;\r\nwidth: 90%;\r\n`;\r\n\r\nconst WeatherInfoContainer=styled.div`\r\ndisplay:flex;\r\nwidth:90%;\r\nflex-direction:row;\r\njustify-content:space-evenly;\r\nalign-items:center;\r\nflex-wrap:wrap;\r\n`;\r\n\r\nconst InfoContainer=styled.div`\r\ndisplay:flex;\r\nmargin:5px 10px;\r\nflex-direction:row;\r\njustify-content:space-evenly;\r\nalign-items:center;\r\n`;\r\n\r\nconst InfoIcon=styled.img`\r\nwidth:36px;\r\nheight:36px;\r\n`;\r\n\r\nconst InfoLabel=styled.span`\r\ndisplay:flex;\r\nmargin:15px;\r\nflex-direction:column;\r\nfont-size:14px;\r\n&span{\r\n    font-size:12px;\r\n    text-transform:capitalize;\r\n}\r\n`;\r\n\r\nconst WeatherInfoComponent=(props) =>{\r\n    const {name,value}=props;\r\n    return(\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    )\r\n}\r\n\r\nconst WeatherLogo=styled.img`\r\nwidth:100px;\r\nheight:100px;\r\nmargin: 5px auto;\r\n`;\r\n\r\nconst WeatherComponent = (props) => {\r\n    const {weather}=props;\r\n    const isDay= weather?.weather[0].icon?.includes('d');\r\n    const getTime= (timeStamp)=>{\r\n        return`${new Date(timeStamp*1000).getHours()}:${new Date(timeStamp*1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n            <WeatherCondition>\r\n                <Condition><span>{`${Math.floor(weather?.main?.temp-273)}`}&deg;C</span>{` | ${weather?.weather[0].description}`}</Condition>\r\n                <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]}/>\r\n            </WeatherCondition>\r\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={isDay ? \"sunset\":\"sunrise\"} \r\n                value={getTime(weather?.sys[isDay ? \"sunset\":\"sunrise\"])}/>\r\n                <WeatherInfoComponent name=\"humidity\" value={weather?.main?.humidity}/>\r\n                <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed}/>\r\n                <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure}/>\r\n            </WeatherInfoContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent;\r\n","import React from 'react';\r\n  \r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <p>Developed by Prasad Patare</p>\r\n  \r\n  </footer>\r\n);\r\n  \r\nexport default Footer;","import React from 'react';\nimport \"./App.css\";\nimport styled from 'styled-components';\nimport CityComponent from './components/CityComponent';\nimport WeatherComponent from './components/WeatherInfoComponent';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { WeatherLogo } from './components/CityComponent';\nimport Footer from './components/Footer';\n\n\nconst Container=styled.div`\ndisplay:flex;\nflex-direction: column;\nmargin:auto;\nalign-items:center;\nbox-shadow:0 3px 6px 0 #555;\npadding: 20px 10px;\nborder-radius: 5px;\nwidth:20rem;\nbackground: linear-gradient(rgb(190, 56, 179), rgb(70, 193, 209));\nfont-family: \"Courgette\",cursive;\n`;\n\nconst AppLabel=styled.span`\ncolor:black;\nfont-size:18px;\nfont-weight:bold;\n`;\n\nfunction App() {\n  const [city,updateCity]=useState();\n  const [weather, updateWeather] = useState();\n\n  const fetchWeather= async (e)=>{\n    e.preventDefault();\n    const res= await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=33c1997dc71d164380e056b0e444ac0f`,\n    );\n    updateWeather(res.data);\n  };\n\n  return (\n    <Container>\n      <AppLabel>Weather App</AppLabel>\n      <CityComponent updateCity={updateCity} fetchWeather={fetchWeather}/>\n      {(weather)?\n        (<WeatherComponent weather={weather} city={city}/>):\n        (<WeatherLogo src=\"./icons/weather.png\"/>)\n      }\n      <Footer/>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}